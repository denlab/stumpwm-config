;; Hey, Emacs! This is a -*- lisp -*- file!

(clear-window-placement-rules)

;; For this to work, you have to create a screen like that:
;;
;; +-----------------------------------------------+
;; |0                                              |
;; |              Main area  (Emacs, ...)          |
;; |                                               |
;; |                                               |
;; |                                               |
;; +-----------------+-----+-----------------+-----+
;; |1                |3    |2                |4    |
;; |                 |     |                 |     |
;; |     term        | dock|      term       |trash|
;; +-----------------+-----+-----------------+-----+
;;
;; And then dump it to ~/.stumpwm.screendump
;;
;; To do that:
;;   * C-t ;
;;   * dump-screen-to-file

(define-frame-preference "Default"
  ;; frame raise lock (lock AND raise == jumpto)
  (0 t   t :title "emacs")
  (0 t   t :title "firefox")
  (3 t   t :class "stalonetray")
  (4 t   t :title "nautilus")
  (1 t   t :title "gnome-terminal"))

(setf *frame-number-map* "abcdefghijklmnopqrst")

(setf *window-format* "%m%n%s nm=%50t cl=%c id=%i")

(run-commands "restore-from-file ~/.stumpwm.screendump")

;; specific commands that permits to run or raise the same instance of programs
(defcommand firefox () ()
  "Start Firefox or switch to it, if it is already running."
  (run-or-raise "firefox" '(:class "Firefox")))
(define-key *root-map* (kbd "f") "firefox")

(defcommand term1 () ()
  "run term emul"
  (run-or-raise "gnome-terminal" '(:class "Term1")))
(run-commands "term1")

(defcommand xterm-1 () ()
  "run an xterm instance or switch to it, if it is already running."
  (run-or-raise "xterm -name xterm1" '(:instance "xterm1")))
(define-key *root-map* (kbd "x") "xterm-1")

;; frame selection
(define-key *root-map* (kbd "o") "fselect")

(defcommand emacs () ()  ;! redefining emacs command
  "Start Emacs or switch to it, if it is already running."
  (run-or-raise "emacs -rv" '(:class "Emacs")))

;; Another way to declare a shortcut for launching google-chrome
(defprogram-shortcut :chrome :command "chromium-browser" 
                     :props '(:class "Chromium")
                     :map *root-map* :key (kbd "b"))
;; conkeror powaaaa!
;;(defprogram-shortcut :chrome :command "conkeror" 
;;  :props '(:class "conkeror")
;;  :map *root-map* :key (kbd "d")
;; )

;;Set the mouse policy to focus follows mouse;
(setf *mouse-focus-policy* :sloppy) ;; :click, :ignore, :sloppy

;; Launch commands
(run-shell-command "stalonetray -t --window-type normal --pixmap-bg ~/Dropbox/home/black-1x1.xpm -v -t")
(run-shell-command "/usr/bin/gnome-settings-daemon")
(run-shell-command "/usr/bin/nm-applet &")
(run-shell-command "/usr/bin/bluetooth-applet &")
(run-shell-command "/usr/bin/pactl load-module module-x11-xsmp &")
(run-shell-command "gnome-power-manager")
(run-shell-command "dropbox start")
(run-shell-command "nautilus --no-default-window")
